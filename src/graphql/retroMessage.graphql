fragment retroMessageFields on RetroMessage {
  _id
  content
  status
  type
  like
  createdAt
  user {
    _id
    nickname
    username
    avatarUrl
  }
}

query FindRetroMessages($retro: ID!) {
  findRetroMessages(retro: $retro) {
    ...retroMessageFields
  }
  retro(_id: $retro) {
    user {
      _id
    }
  }
}

query FindRetroMessage($_id: ID!) {
  findRetroMessage(_id: $_id) {
    ...retroMessageFields
  }
}

mutation CreateRetroMessage(
  $retro: ID!
  $content: String!
  $type: RetroMessageType!
) {
  createRetroMessage(input: { retro: $retro, content: $content, type: $type }) {
    ...retroMessageFields
  }
}

mutation UpdateRetroMessage(
  $_id: ID!
  $content: String
  $type: RetroMessageType
  $status: RetroMessageStatus
) {
  updateRetroMessage(
    _id: $_id
    input: { content: $content, type: $type, status: $status }
  ) {
    ...retroMessageFields
  }
}

mutation LikeRetroMessage($_id: ID!, $count: Int) {
  likeRetroMessage(_id: $_id, count: $count) {
    ...retroMessageFields
  }
}

mutation DeleteRetroMessage($_id: ID!) {
  deleteRetroMessage(_id: $_id) {
    ...retroMessageFields
  }
}

subscription RetroMessageCreated {
  retroMessageCreated {
    ...retroMessageFields
  }
}

subscription RetroMessageUpdated {
  retroMessageUpdated {
    ...retroMessageFields
  }
}

subscription RetroMessageDeleted {
  retroMessageDeleted {
    ...retroMessageFields
  }
}

subscription RetroMessageLiked {
  retroMessageLiked {
    ...retroMessageFields
  }
}
